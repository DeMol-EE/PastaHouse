/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.invoices.dialogs;

import database.Database;
import database.FunctionResult;
import database.models.ClientModel;
import database.tables.Client;
import gui.invoices.delegates.AddClientDelegate;
import gui.utilities.AcceleratorAdder;
import gui.utilities.KeyAction;
import gui.utilities.combobox.AutocompleteCombobox;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import tools.Utilities;

/**
 *
 * @author Warkst
 */
public class AddClientDialog extends javax.swing.JDialog {

    private final AddClientDelegate delegate;
    private final ClientModel model;
    
    /**
     * Creates new form AddClientDialog
     */
    public AddClientDialog(java.awt.Frame parent, boolean modal, AddClientDelegate delegate) {
	super(parent, modal);
	initComponents();
	setTitle("Klant toevoegen");
	
	setLocationRelativeTo(null);
	
	this.delegate = delegate;
	this.model = new ClientModel();
	
	loadModel();
	
	AcceleratorAdder.addAccelerator(add, KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0), new KeyAction() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		addActionPerformed(e);
	    }
	});
	
	AcceleratorAdder.addAccelerator(cancel, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), new KeyAction() {
	    @Override
	    public void actionPerformed(ActionEvent e) {
		cancelActionPerformed(e);
	    }
	});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtFirma = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtAdres = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPostcode = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        HolderGemeentes = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTel2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtGSM = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtFax = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        taxnrOutlet = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pricecodeOutlet = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesOutlet = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel4 = new javax.swing.JPanel();
        add = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(536, 600));

        jPanel2.setLayout(new java.awt.GridLayout(12, 2));

        jLabel11.setText("Firma");
        jLabel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel11);
        jPanel2.add(txtFirma);

        jLabel10.setText("Contactpersoon *");
        jLabel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel10);
        jPanel2.add(txtContact);

        jLabel13.setText("Adres");
        jLabel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel13);
        jPanel2.add(txtAdres);

        jLabel1.setText("Postcode");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel1);

        txtPostcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPostcodeKeyReleased(evt);
            }
        });
        jPanel2.add(txtPostcode);

        jLabel12.setText("Gemeente");
        jLabel12.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel12);

        HolderGemeentes.setLayout(new java.awt.BorderLayout());
        jPanel2.add(HolderGemeentes);

        jLabel9.setText("Telefoon");
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel9);
        jPanel2.add(txtTel);

        jLabel2.setText("Telefoon 2");
        jLabel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel2);
        jPanel2.add(txtTel2);

        jLabel14.setText("GSM");
        jLabel14.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel14);
        jPanel2.add(txtGSM);

        jLabel15.setText("Fax");
        jLabel15.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel15);
        jPanel2.add(txtFax);

        jLabel16.setText("Email");
        jLabel16.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel16);
        jPanel2.add(txtEmail);

        jLabel3.setText("BTWNummer");
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel3);

        taxnrOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taxnrOutletKeyReleased(evt);
            }
        });
        jPanel2.add(taxnrOutlet);

        jLabel4.setText("Prijscode");
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 1));
        jPanel2.add(jLabel4);

        pricecodeOutlet.setMaximumRowCount(3);
        pricecodeOutlet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "A", "B" }));
        jPanel2.add(pricecodeOutlet);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Opmerking"));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(800, 600));
        jScrollPane2.setName(""); // NOI18N

        notesOutlet.setColumns(20);
        notesOutlet.setRows(5);
        jScrollPane2.setViewportView(notesOutlet);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(filler1, java.awt.BorderLayout.CENTER);

        jPanel4.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel4.setLayout(new java.awt.GridLayout(1, 2, 0, 5));

        add.setText("OK");
        add.setFocusable(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel4.add(add);

        cancel.setText("Cancel");
        cancel.setFocusable(false);
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel4.add(cancel);

        jPanel1.add(jPanel4, java.awt.BorderLayout.EAST);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPostcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPostcodeKeyReleased
        TreeMap<String, Integer> munies = (TreeMap<String, Integer>) Database.driver().getMunicipales();
        ArrayList items = new ArrayList();
        if (!txtPostcode.getText().isEmpty()) {
            int code = Integer.parseInt(txtPostcode.getText());
            if (munies.containsValue(code)) {
                for (String munie : munies.keySet()) {
                    if (munies.get(munie) == code) {
                        items.add(munie);
                    }
                }
            }

        } else {
            items.add("");
            items.addAll(munies.keySet());
        }
        comboGemeentes.setDataList(items);
    }//GEN-LAST:event_txtPostcodeKeyReleased

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try {
            if (txtContact.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, tools.Utilities.incompleteFormMessage, "Fout!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            model.setFirm(txtFirma.getText());
            model.setAddress(txtAdres.getText());
            model.setMunicipality(comboGemeentes.getSelectedItem().toString());
            model.setZipcode(Integer.parseInt(txtPostcode.getText()));
            model.setTelephone(txtTel.getText());
            model.setTelephone2(txtTel2.getText());
            model.setFax(txtFax.getText());
            model.setCellphone(txtGSM.getText());
            model.setEmail(txtEmail.getText());
            model.setContact(txtContact.getText());
            model.setNotes(notesOutlet.getText());
            model.setTaxnumber(taxnrOutlet.getText());
            model.setPricecode(pricecodeOutlet.getSelectedItem().toString());

            FunctionResult<Client> result = model.create();
            if (result.getCode() == 0 && result.getObj() != null) {
                //		delegate.addAndSelect(result.getObj());
                delegate.addClient(result.getObj());
                disposeLater();
            } else {
                // switch case the return code
                JOptionPane.showMessageDialog(null, "Het toevoegen van de klant heeft foutcode "+result.getCode()+" opgeleverd. Contacteer de ontwikkelaars met deze informatie.", "Fout!", JOptionPane.ERROR_MESSAGE);
                disposeLater();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, tools.Utilities.incorrectFormMessage, "Fout!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        disposeLater();
    }//GEN-LAST:event_cancelActionPerformed

    private void taxnrOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taxnrOutletKeyReleased
        if (!Utilities.validTaxNr(taxnrOutlet.getText())) {
	    taxnrOutlet.setForeground(Color.red);
	} else {
	    taxnrOutlet.setForeground(Color.black);
	}
    }//GEN-LAST:event_taxnrOutletKeyReleased

    private void disposeLater(){
	SwingUtilities.invokeLater(new Runnable() {

	    @Override
	    public void run() {
		dispose();
	    }
	});
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HolderGemeentes;
    private javax.swing.JButton add;
    private javax.swing.JButton cancel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea notesOutlet;
    private javax.swing.JComboBox pricecodeOutlet;
    private javax.swing.JTextField taxnrOutlet;
    private javax.swing.JTextField txtAdres;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtFirma;
    private javax.swing.JTextField txtGSM;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtTel;
    private javax.swing.JTextField txtTel2;
    // End of variables declaration//GEN-END:variables
    private AutocompleteCombobox comboGemeentes;

    private void loadModel() {

        TreeMap<String, Integer> munies = (TreeMap<String, Integer>) Database.driver().getMunicipales();
        ArrayList items = new ArrayList();
        items.add("");
        items.addAll(munies.keySet());
        comboGemeentes = new AutocompleteCombobox(items);
        comboGemeentes.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setMunicipal();
            }
        });
        comboGemeentes.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

	    @Override
	    public void keyReleased(KeyEvent e) {
		setMunicipal();
	    }
	    
	});

        HolderGemeentes.add(comboGemeentes);

    }

    private void setMunicipal() {
        TreeMap<String, Integer> munies = (TreeMap<String, Integer>) Database.driver().getMunicipales();
        String munie = comboGemeentes.getSelectedItem().toString();
        if (munies.containsKey(munie)) {
            txtPostcode.setText(munies.get((String)comboGemeentes.getSelectedItem()).toString());
        } else {
            txtPostcode.setText("");
        }
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.invoices.controllers;

import database.tables.Invoice;
import gui.MasterDetailViewController;
import gui.utilities.table.InvoiceTableModel;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import tools.Utilities;

/**
 *
 * @author Warkst
 */
public class InvoiceViewController extends javax.swing.JPanel implements MasterDetailViewController<Invoice> {

    private Map<String, RowFilter<Object, Object>> filters;
    
    private TableRowSorter<InvoiceTableModel> sorter;
    
    /**
     * Creates new form InvoiceViewController
     */
    public InvoiceViewController() {
	initComponents();
	
	InvoiceTableModel model = new InvoiceTableModel();
	
	tableOutlet.setModel(model);
	
	filters = new HashMap<String, RowFilter<Object, Object>>();
	sorter = new TableRowSorter<InvoiceTableModel>(model);
	
	tableOutlet.setRowSorter(sorter);
	tableOutlet.setRowHeight(tableOutlet.getRowHeight()+Utilities.fontSize()-10);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        noResultOutlet = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        dateFilterOutlet = new javax.swing.JTextField();
        clientFilterOutlet = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOutlet = new javax.swing.JTable();

        noResultOutlet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noResultOutlet.setText("Geen resultaten");

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(2, 2));

        dateFilterOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateFilterOutletKeyReleased(evt);
            }
        });
        jPanel2.add(dateFilterOutlet);

        clientFilterOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientFilterOutletKeyReleased(evt);
            }
        });
        jPanel2.add(clientFilterOutlet);

        jLabel1.setText("Datum");
        jPanel2.add(jLabel1);

        jLabel2.setText("Klant");
        jPanel2.add(jLabel2);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.SOUTH);

        jPanel3.setLayout(new java.awt.BorderLayout());

        tableOutlet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableOutlet);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void updateFilter(){
	List<RowFilter<Object, Object>> filters_ = new ArrayList<RowFilter<Object, Object>>();
	
	for (RowFilter<Object, Object> rowFilter : filters.values()) {
	    if (rowFilter!=null) {
		filters_.add(rowFilter);
	    }
	}
	
	sorter.setRowFilter(RowFilter.andFilter(filters_));
	
//	System.out.println("showing "+tableOutlet.getRowCount()+ " rows");	
	if (tableOutlet.getRowCount() == 0) {
	    System.out.println("wub wub");
//	    jPanel3.add(noResultOutlet, BorderLayout.SOUTH);
//	    jPanel3.validate();
//	    jPanel3.repaint();
	}
    }
    
    private void dateFilterOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateFilterOutletKeyReleased
        if (!dateFilterOutlet.getText().isEmpty()) {
	    filters.put("date", RowFilter.regexFilter(dateFilterOutlet.getText(), 0));
	} else {
	    filters.put("date", null);
	}
	
	updateFilter();
	
    }//GEN-LAST:event_dateFilterOutletKeyReleased

    private void clientFilterOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientFilterOutletKeyReleased
        if (!clientFilterOutlet.getText().isEmpty()) {
	    filters.put("client", RowFilter.regexFilter(clientFilterOutlet.getText(), 1));
	} else {
	    filters.put("client", RowFilter.regexFilter(clientFilterOutlet.getText(), 1));
	}
	
	updateFilter();
    }//GEN-LAST:event_clientFilterOutletKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientFilterOutlet;
    private javax.swing.JTextField dateFilterOutlet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel noResultOutlet;
    private javax.swing.JTable tableOutlet;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateDetail(Invoice value) {
	throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void addAndSelect(Invoice newObj) {
	throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void editAndSelect(Invoice newObj, Invoice oldObj) {
	throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void addProxy() {
	throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void editProxy() {
	throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void electFirstResponder() {
	tableOutlet.requestFocus();
    }

    @Override
    public JPanel view() {
	return this;
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.invoices.controllers;

import database.Database;
import database.tables.Contact;
import database.tables.Invoice;
import gui.MasterDetailViewController;
import gui.NoResultsPanel;
import gui.utilities.TextFieldAutoHighlighter;
import gui.utilities.table.InvoiceItemTableModel;
import gui.utilities.table.InvoiceTableModel;
import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableRowSorter;
import tools.Utilities;

/**
 *
 * @author Warkst
 */
public class InvoiceViewController extends javax.swing.JPanel implements MasterDetailViewController<Invoice> {

    private Map<String, RowFilter<Object, Object>> filters;
    private TableRowSorter<InvoiceTableModel> sorter;
    private InvoiceTableModel tableModel;
    
    /**
     * Creates new form InvoiceViewController
     */
    public InvoiceViewController() {
	initComponents();
	
	tableModel = new InvoiceTableModel(Database.driver().getInvoicesByNumber());
	
	invoiceTableOutlet.setModel(tableModel);
	
	invoiceTableOutlet.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

	    @Override
	    public void valueChanged(ListSelectionEvent e) {
		if (!e.getValueIsAdjusting()) {
		    updateDetail(tableModel.getInvoiceAtRow(invoiceTableOutlet.getSelectedRow()));
		}
	    }
	});
	
	filters = new HashMap<String, RowFilter<Object, Object>>();
	sorter = new TableRowSorter<InvoiceTableModel>(tableModel);
	
	invoiceTableOutlet.setRowSorter(sorter);
	invoiceTableOutlet.setRowHeight(invoiceTableOutlet.getRowHeight()+Utilities.fontSize()-10);
	
	articleTableOutlet.setRowHeight(articleTableOutlet.getRowHeight()+Utilities.fontSize()-10);
	
	invoiceTableOutlet.setRowSelectionInterval(0, 0);
	
	TextFieldAutoHighlighter.installHighlighter(clientFilterOutlet);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        noResultOutlet = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTableOutlet = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        filterPanel = new javax.swing.JPanel();
        numberFilterOutlet = new javax.swing.JTextField();
        clientFilterOutlet = new javax.swing.JTextField();
        detail = new javax.swing.JPanel();
        results = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        clientOutlet = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dateOutlet = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        priceOutlet = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        articleTableOutlet = new javax.swing.JTable();

        noResultOutlet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noResultOutlet.setText("Geen resultaten");

        setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 150));
        jPanel3.setLayout(new java.awt.BorderLayout());

        invoiceTableOutlet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(invoiceTableOutlet);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel3, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.BorderLayout());

        filterPanel.setLayout(new java.awt.GridLayout(1, 2));

        numberFilterOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numberFilterOutletKeyReleased(evt);
            }
        });
        filterPanel.add(numberFilterOutlet);

        clientFilterOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                clientFilterOutletKeyReleased(evt);
            }
        });
        filterPanel.add(clientFilterOutlet);

        jPanel1.add(filterPanel, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel1, java.awt.BorderLayout.NORTH);

        add(jPanel4, java.awt.BorderLayout.NORTH);

        detail.setLayout(new java.awt.BorderLayout());

        results.setLayout(new java.awt.BorderLayout());

        jPanel7.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.BorderLayout());
        jPanel8.add(jSeparator1, java.awt.BorderLayout.NORTH);

        jPanel7.add(jPanel8, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.GridLayout(3, 2));

        jLabel2.setText("Klant");
        jPanel2.add(jLabel2);

        clientOutlet.setText("<hyperlink to client>");
        jPanel2.add(clientOutlet);

        jLabel4.setText("Datum");
        jPanel2.add(jLabel4);

        dateOutlet.setText("<dateOutlet>");
        jPanel2.add(dateOutlet);

        jLabel6.setText("Prijs");
        jPanel2.add(jLabel6);

        priceOutlet.setText("<priceOutlet>");
        jPanel2.add(priceOutlet);

        jPanel7.add(jPanel2, java.awt.BorderLayout.CENTER);

        results.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new java.awt.BorderLayout());

        articleTableOutlet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(articleTableOutlet);

        jPanel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        results.add(jPanel6, java.awt.BorderLayout.CENTER);

        detail.add(results, java.awt.BorderLayout.CENTER);

        add(detail, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void updateFilter(){
	List<RowFilter<Object, Object>> filters_ = new ArrayList<RowFilter<Object, Object>>();
	
	for (RowFilter<Object, Object> rowFilter : filters.values()) {
	    if (rowFilter!=null) {
		filters_.add(rowFilter);
	    }
	}
	
	sorter.setRowFilter(RowFilter.andFilter(filters_));
		
	if (invoiceTableOutlet.getRowCount() == 0) {
	    System.out.println("There are no results");
	    detail.remove(results);
	    detail.add(new NoResultsPanel(), BorderLayout.CENTER);
	} else {
	    invoiceTableOutlet.setRowSelectionInterval(0, 0);
	    detail.removeAll();
	    detail.add(results);
	}
    }
    
    private void numberFilterOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numberFilterOutletKeyReleased
        if (!numberFilterOutlet.getText().isEmpty()) {
	    filters.put("date", RowFilter.regexFilter(numberFilterOutlet.getText(), 0));
	} else {
	    filters.put("date", null);
	}
	
	updateFilter();
	
    }//GEN-LAST:event_numberFilterOutletKeyReleased

    private void clientFilterOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clientFilterOutletKeyReleased
        if (!clientFilterOutlet.getText().isEmpty()) {
	    filters.put("client", RowFilter.regexFilter(clientFilterOutlet.getText(), 1));
	} else {
	    filters.put("client", null);
	}
	
	updateFilter();
    }//GEN-LAST:event_clientFilterOutletKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable articleTableOutlet;
    private javax.swing.JTextField clientFilterOutlet;
    private javax.swing.JLabel clientOutlet;
    private javax.swing.JLabel dateOutlet;
    private javax.swing.JPanel detail;
    private javax.swing.JPanel filterPanel;
    private javax.swing.JTable invoiceTableOutlet;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel noResultOutlet;
    private javax.swing.JTextField numberFilterOutlet;
    private javax.swing.JLabel priceOutlet;
    private javax.swing.JPanel results;
    // End of variables declaration//GEN-END:variables

    public void filterByClient(Contact c){
	clientFilterOutlet.setText(c.getSortKey());
	clientFilterOutletKeyReleased(null);
    }
    
    @Override
    public void updateDetail(Invoice value) {
	clientOutlet.setText(value.getClient().getSortKey());
	dateOutlet.setText(value.getDate());
	priceOutlet.setText(value.getPriceCode());
	
	articleTableOutlet.setModel(new InvoiceItemTableModel(value.items()));
    }
    
    @Override
    public void electFirstResponder() {
	invoiceTableOutlet.requestFocus();
    }

    @Override
    public JPanel view() {
	return this;
    }

    @Override
    public JMenu menu() {
	return null;
    }
}

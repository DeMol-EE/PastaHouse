/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.ingredients;

import database.tables.Supplier;
import gui.TabbedViewController;
import gui.ingredients.controllers.BasicIngredientViewController;
import gui.ingredients.controllers.MasterDetailViewController;
import gui.ingredients.controllers.RecipeViewController;
import gui.ingredients.controllers.SupplierViewController;
import java.util.HashMap;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Hannes
 */
public class RecipeTabbedViewController extends javax.swing.JPanel implements TabbedViewController{

    private final int recipeTabIndex = 0;
    private final int ingredientTabIndex = 1;
    private final int supplierTabIndex = 2;
    private HashMap<Integer, MasterDetailViewController> tabs;
    
    /**
     * Creates new form RecipeTabbedViewController
     */
    public RecipeTabbedViewController() {
        initComponents();
        
        tabs = new HashMap<Integer, MasterDetailViewController>();
        
	tabs.put(supplierTabIndex, new SupplierViewController());
	tabs.put(ingredientTabIndex, new BasicIngredientViewController(this));
	tabs.put(recipeTabIndex, new RecipeViewController());
	
	recipeTab.add(tabs.get(recipeTabIndex).view());
	ingredientTab.add(tabs.get(ingredientTabIndex).view());
	supplierTab.add(tabs.get(supplierTabIndex).view());
	
	tabController.addChangeListener(new ChangeListener() {

	    @Override
	    public void stateChanged(ChangeEvent e) {
		tabs.get(tabController.getSelectedIndex()).electFirstResponder();
	    }
	});
	
//	tabController.addChangeListener(new ChangeListener() {
//
//	    @Override
//	    public void stateChanged(ChangeEvent e) {
//		if (tabController.getSelectedIndex() == recipeTabIndex) {
//		    print.setEnabled(true);
//		} else {
//		    print.setEnabled(false);
//		}
//	    }
//	});
    }
    
    public void electFirstResponder(){
	tabs.get(tabController.getSelectedIndex()).electFirstResponder();
    }
    
    public void selectAndSwitchToSupplier(Supplier supplier){
	((SupplierViewController)tabs.get(supplierTabIndex)).selectSupplier(supplier);
	tabController.setSelectedIndex(supplierTabIndex);
    }
    
    @Override
    public JPanel view(){
        return this;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabController = new javax.swing.JTabbedPane();
        recipeTab = new javax.swing.JPanel();
        ingredientTab = new javax.swing.JPanel();
        supplierTab = new javax.swing.JPanel();

        setFocusable(false);
        setLayout(new java.awt.BorderLayout());

        tabController.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tabController.setFocusable(false);

        recipeTab.setFocusable(false);
        recipeTab.setLayout(new java.awt.BorderLayout());
        tabController.addTab("Recepten", recipeTab);

        ingredientTab.setFocusable(false);
        ingredientTab.setLayout(new java.awt.BorderLayout());
        tabController.addTab("IngrediÃ«nten", ingredientTab);

        supplierTab.setFocusable(false);
        supplierTab.setLayout(new java.awt.BorderLayout());
        tabController.addTab("Leveranciers", supplierTab);

        add(tabController, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ingredientTab;
    private javax.swing.JPanel recipeTab;
    private javax.swing.JPanel supplierTab;
    private javax.swing.JTabbedPane tabController;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.contacts.controllers;

import database.tables.Contact;
import gui.EmptyPanelManager;
import gui.MasterDetailViewController;
import gui.NoResultsPanel;
import gui.contacts.delegates.AddContactDelegate;
import gui.contacts.delegates.EditContactDelegate;
import gui.contacts.dialogs.AddContactDialog;
import gui.contacts.dialogs.EditContactDialog;
import gui.utilities.TextFieldAutoHighlighter;
import gui.utilities.list.ContactListModel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.swingx.JXTitledPanel;
import tools.StringTools;
import tools.Utilities;

/**
 *
 * @author Warkst
 */
public class ContactsViewController extends javax.swing.JPanel implements MasterDetailViewController<Contact>, AddContactDelegate, EditContactDelegate {

//    private Map<FilterPanel, RowFilter> filtersMap;
//    private Set<String> unusedFilterKeys;
//    private Set<String> usedFilterKeys;
    
    private ContactListModel listModel;
    
    /**
     * Creates new form ContactsViewController
     */
    public ContactsViewController() {
	initComponents();
	notesOutlet.setBackground(new Color(213, 216, 222));
        notesOutlet.setCaretPosition(0);
	listModel = new ContactListModel(database.Database.driver().getContactsAlphabetically());
	listOutlet.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
	listOutlet.setModel(listModel);
	
	listOutlet.addListSelectionListener(new ListSelectionListener() {

	    @Override
	    public void valueChanged(ListSelectionEvent e) {
		if (!e.getValueIsAdjusting()) {
		    if (listOutlet.getSelectedValue()!=null) {
			updateDetail((Contact)listOutlet.getSelectedValue());
		    }
		}
	    }
	});
	listOutlet.setSelectedIndex(0);
	
	listOutlet.setCellRenderer(new ListCellRenderer() {

	    @Override
	    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
		JLabel label = new JLabel();
		label.setOpaque(true);
		
		if (!(value instanceof Contact)) {
		    label.setText("Error: contact list cell renderer received non-contact value to display");   
		    return label;
		}
		
		Contact c = (Contact) value;
		label.setText(c.getFullRepresentation());
		
		label.setBorder(BorderFactory.createEmptyBorder());
	
		if (isSelected) {
		    label.setForeground(list.getSelectionForeground());
		    label.setBackground(list.getSelectionBackground());
		} else {
		    label.setForeground(list.getForeground());
//		    label.setBackground(c.isSupplier()? new Color(255, 229, 204) : new Color(204, 255, 204));
		    label.setBackground(Color.white);
		}
		
		return label;
	    }
	});
	
	if (listModel.getSize() == 0) {
	    detail.remove(container);
	    detail.add(EmptyPanelManager.instance(), BorderLayout.CENTER);
	}
	
	container.add(new JXTitledPanel("Details", fixedFields), BorderLayout.NORTH);
	container.add(new JXTitledPanel("Opmerkingen", stretchableFields), BorderLayout.CENTER);
	
	notesOutlet.setFont(new Font(notesOutlet.getFont().getName(), Font.PLAIN, Utilities.fontSize()));
	
//	filtersMap = new HashMap<FilterPanel, RowFilter>();
	TextFieldAutoHighlighter.installHighlighter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editMenu = new javax.swing.JMenu();
        addMenuItem = new javax.swing.JMenuItem();
        editMenuItem = new javax.swing.JMenuItem();
        searchMenuItem = new javax.swing.JMenuItem();
        fixedFields = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        firmTitleOutlet = new javax.swing.JLabel();
        firmOutlet = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        contactOutlet = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addressOutlet = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        zipcodeOutlet = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        municipalityOutlet = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        telephoneOutlet = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        telephone2Outlet = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cellphoneOutlet = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        faxOutlet = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        emailOutlet = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        taxnrOutlet = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pricecodeOutlet = new javax.swing.JLabel();
        stretchableFields = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesOutlet = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        typeOutlet = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSplitPane1 = new javax.swing.JSplitPane();
        master = new javax.swing.JPanel();
        filter = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOutlet = new javax.swing.JList();
        add = new javax.swing.JButton();
        detail = new javax.swing.JPanel();
        results = new javax.swing.JPanel();
        container = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        edit = new javax.swing.JButton();

        editMenu.setText("Acties");

        addMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        addMenuItem.setText("Toevoegen");
        addMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(addMenuItem);

        editMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        editMenuItem.setText("Wijzigen");
        editMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(editMenuItem);

        searchMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        searchMenuItem.setText("Zoeken");
        searchMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(searchMenuItem);

        fixedFields.setFocusable(false);
        fixedFields.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(12, 2));

        firmTitleOutlet.setText("Firma");
        firmTitleOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        firmTitleOutlet.setFocusable(false);
        jPanel1.add(firmTitleOutlet);

        firmOutlet.setText("<firmOutlet>");
        firmOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        firmOutlet.setFocusable(false);
        jPanel1.add(firmOutlet);

        jLabel4.setBackground(new java.awt.Color(239, 239, 239));
        jLabel4.setText("Contactpersoon");
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel4.setFocusable(false);
        jLabel4.setOpaque(true);
        jPanel1.add(jLabel4);

        contactOutlet.setBackground(new java.awt.Color(239, 239, 239));
        contactOutlet.setText("<contactOutlet>");
        contactOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        contactOutlet.setFocusable(false);
        contactOutlet.setOpaque(true);
        jPanel1.add(contactOutlet);

        jLabel12.setText("Adres");
        jLabel12.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel12.setFocusable(false);
        jPanel1.add(jLabel12);

        addressOutlet.setText("<addressOutlet>");
        addressOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        addressOutlet.setFocusable(false);
        jPanel1.add(addressOutlet);

        jLabel10.setBackground(new java.awt.Color(239, 239, 239));
        jLabel10.setText("Postcode");
        jLabel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel10.setOpaque(true);
        jPanel1.add(jLabel10);

        zipcodeOutlet.setBackground(new java.awt.Color(239, 239, 239));
        zipcodeOutlet.setText("<zipcodeOutlet>");
        zipcodeOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        zipcodeOutlet.setOpaque(true);
        jPanel1.add(zipcodeOutlet);

        jLabel13.setText("Gemeente");
        jLabel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel13.setFocusable(false);
        jPanel1.add(jLabel13);

        municipalityOutlet.setText("<municipalityOutlet>");
        municipalityOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        municipalityOutlet.setFocusable(false);
        jPanel1.add(municipalityOutlet);

        jLabel5.setBackground(new java.awt.Color(239, 239, 239));
        jLabel5.setText("Telefoon");
        jLabel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel5.setFocusable(false);
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5);

        telephoneOutlet.setBackground(new java.awt.Color(239, 239, 239));
        telephoneOutlet.setText("<telephoneOutlet>");
        telephoneOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        telephoneOutlet.setFocusable(false);
        telephoneOutlet.setOpaque(true);
        jPanel1.add(telephoneOutlet);

        jLabel9.setText("Telefoon 2");
        jLabel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jPanel1.add(jLabel9);

        telephone2Outlet.setText("<telephone2Outlet>");
        telephone2Outlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        jPanel1.add(telephone2Outlet);

        jLabel6.setBackground(new java.awt.Color(239, 239, 239));
        jLabel6.setText("GSM");
        jLabel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel6.setFocusable(false);
        jLabel6.setOpaque(true);
        jPanel1.add(jLabel6);

        cellphoneOutlet.setBackground(new java.awt.Color(239, 239, 239));
        cellphoneOutlet.setText("<cellphoneOutlet>");
        cellphoneOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        cellphoneOutlet.setFocusable(false);
        cellphoneOutlet.setOpaque(true);
        jPanel1.add(cellphoneOutlet);

        jLabel7.setText("Fax");
        jLabel7.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel7.setFocusable(false);
        jPanel1.add(jLabel7);

        faxOutlet.setText("<faxOutlet>");
        faxOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        faxOutlet.setFocusable(false);
        jPanel1.add(faxOutlet);

        jLabel8.setBackground(new java.awt.Color(239, 239, 239));
        jLabel8.setText("Email");
        jLabel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel8.setFocusable(false);
        jLabel8.setOpaque(true);
        jPanel1.add(jLabel8);

        emailOutlet.setBackground(new java.awt.Color(239, 239, 239));
        emailOutlet.setText("<emailOutlet>");
        emailOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        emailOutlet.setFocusable(false);
        emailOutlet.setOpaque(true);
        jPanel1.add(emailOutlet);

        jLabel11.setText("BTWNummer");
        jLabel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel11.setFocusable(false);
        jPanel1.add(jLabel11);

        taxnrOutlet.setText("<taxnrOutlet>");
        taxnrOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        taxnrOutlet.setFocusable(false);
        jPanel1.add(taxnrOutlet);

        jLabel14.setBackground(new java.awt.Color(239, 239, 239));
        jLabel14.setText("Prijscode");
        jLabel14.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 0));
        jLabel14.setFocusable(false);
        jLabel14.setOpaque(true);
        jPanel1.add(jLabel14);

        pricecodeOutlet.setBackground(new java.awt.Color(239, 239, 239));
        pricecodeOutlet.setText("<pricecodeOutlet>");
        pricecodeOutlet.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 0, 3, 0));
        pricecodeOutlet.setFocusable(false);
        pricecodeOutlet.setOpaque(true);
        jPanel1.add(pricecodeOutlet);

        fixedFields.add(jPanel1, java.awt.BorderLayout.CENTER);

        stretchableFields.setFocusable(false);
        stretchableFields.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(null);
        jScrollPane2.setFocusable(false);

        notesOutlet.setBackground(new java.awt.Color(240, 240, 240));
        notesOutlet.setColumns(20);
        notesOutlet.setFont(new java.awt.Font("Consolas", 0, 13)); // NOI18N
        notesOutlet.setLineWrap(true);
        notesOutlet.setRows(1);
        notesOutlet.setWrapStyleWord(true);
        notesOutlet.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        notesOutlet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                notesOutletKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                notesOutletKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                notesOutletKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(notesOutlet);

        stretchableFields.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        jLabel2.setText("Type");
        jLabel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        jPanel4.add(jLabel2);

        typeOutlet.setText("<typeOutlet>");
        jPanel4.add(typeOutlet);

        jPanel3.add(jPanel4, java.awt.BorderLayout.CENTER);
        jPanel3.add(jSeparator1, java.awt.BorderLayout.SOUTH);

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(200);

        master.setLayout(new java.awt.BorderLayout());

        filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterKeyReleased(evt);
            }
        });
        master.add(filter, java.awt.BorderLayout.NORTH);

        listOutlet.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listOutlet);

        master.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add.setText("Toevoegen...");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        master.add(add, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setLeftComponent(master);

        detail.setLayout(new java.awt.BorderLayout());

        results.setLayout(new java.awt.BorderLayout());

        container.setLayout(new java.awt.BorderLayout());

        jPanel5.setLayout(new java.awt.BorderLayout());

        edit.setText("Wijzigen...");
        edit.setFocusable(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel5.add(edit, java.awt.BorderLayout.EAST);

        container.add(jPanel5, java.awt.BorderLayout.SOUTH);

        results.add(container, java.awt.BorderLayout.CENTER);

        detail.add(results, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(detail);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void addMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMenuItemActionPerformed
        addActionPerformed(null);
    }//GEN-LAST:event_addMenuItemActionPerformed

    private void editMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMenuItemActionPerformed
        editActionPerformed(null);
    }//GEN-LAST:event_editMenuItemActionPerformed

    private void filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterKeyReleased
        if (filter.getText().isEmpty()) {
	    listModel.setFilter(null);
	} else {
	    listModel.setFilter(filter.getText());
	}
	if (listModel.getSize()==0) {
	    System.out.println("No results");
	    detail.removeAll();
	    detail.add(new NoResultsPanel(), BorderLayout.CENTER);
	    validate();
	    repaint();
	    return;
	}
	detail.removeAll();
	detail.add(results);
	listOutlet.setSelectedIndex(0);
	if (listOutlet.getSelectedValue()!=null) {
	    updateDetail((Contact)listOutlet.getSelectedValue());
	}
	validate();
	repaint();
    }//GEN-LAST:event_filterKeyReleased

    private void searchMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuItemActionPerformed
        filter.requestFocus();
    }//GEN-LAST:event_searchMenuItemActionPerformed

    private void notesOutletKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesOutletKeyPressed
//        notesKeyEvent(evt);
    }//GEN-LAST:event_notesOutletKeyPressed

    private void notesOutletKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesOutletKeyReleased
//        notesKeyEvent(evt);
    }//GEN-LAST:event_notesOutletKeyReleased

    private void notesOutletKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_notesOutletKeyTyped
//        notesKeyEvent(evt);
    }//GEN-LAST:event_notesOutletKeyTyped

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
//        new EditSupplierDialog(null, true, this, (Supplier) listOutlet.getSelectedValue()).setVisible(true);
	listModel.setFilter(null);
	filter.setText("");
	
	EditContactDialog.createContactDialog(this, (Contact) listOutlet.getSelectedValue()).setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        AddContactDialog.createContactDialog(this).setVisible(true);
    }//GEN-LAST:event_addActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JMenuItem addMenuItem;
    private javax.swing.JLabel addressOutlet;
    private javax.swing.JLabel cellphoneOutlet;
    private javax.swing.JLabel contactOutlet;
    private javax.swing.JPanel container;
    private javax.swing.JPanel detail;
    private javax.swing.JButton edit;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem editMenuItem;
    private javax.swing.JLabel emailOutlet;
    private javax.swing.JLabel faxOutlet;
    private javax.swing.JTextField filter;
    private javax.swing.JLabel firmOutlet;
    private javax.swing.JLabel firmTitleOutlet;
    private javax.swing.JPanel fixedFields;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JList listOutlet;
    private javax.swing.JPanel master;
    private javax.swing.JLabel municipalityOutlet;
    private javax.swing.JTextArea notesOutlet;
    private javax.swing.JLabel pricecodeOutlet;
    private javax.swing.JPanel results;
    private javax.swing.JMenuItem searchMenuItem;
    private javax.swing.JPanel stretchableFields;
    private javax.swing.JLabel taxnrOutlet;
    private javax.swing.JLabel telephone2Outlet;
    private javax.swing.JLabel telephoneOutlet;
    private javax.swing.JLabel typeOutlet;
    private javax.swing.JLabel zipcodeOutlet;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateDetail(Contact contact) {
	typeOutlet.setText(contact.isSupplier() ? "Leverancier" : "Klant");
	
	firmOutlet.setText(StringTools.capitalizeEach(contact.getFirm()));
	
	contactOutlet.setText(StringTools.capitalizeEach(contact.getContact()));
	addressOutlet.setText(StringTools.capitalizeEach(contact.getAddress()));
        municipalityOutlet.setText(StringTools.capitalize(contact.getMunicipality()));
        telephoneOutlet.setText(contact.getTelephone());
        cellphoneOutlet.setText(contact.getCellphone());
        faxOutlet.setText(contact.getFax());
        emailOutlet.setText(contact.getEmail());
        telephone2Outlet.setText(contact.getTelephone2());
        notesOutlet.setText(contact.getNotes());
        zipcodeOutlet.setText(contact.getZipcode());
	taxnrOutlet.setText(contact.getTaxnumber());
	String code = contact.getPricecode();
	if (code != null) {
	    code = code.toUpperCase();
	}
	pricecodeOutlet.setText(code);
        
        notesOutlet.setCaretPosition(0);
    }

    @Override
    public void electFirstResponder() {
	/*
	 * Update the list model to reflect any changes in the underlying data structure (contacts list)
	 */
	listModel.update();
	
	if (listModel.getSize()>0) {
	    if (listModel.getSize() == 1) {
		detail.removeAll();
		detail.add(container);
	    }
	    listOutlet.setSelectedIndex(0);
	    if(listOutlet.getSelectedValue()!=null)updateDetail((Contact)listOutlet.getSelectedValue());
	}
	
	/*
	 * Elect first responder
	 */
	listOutlet.requestFocus();
    }

    @Override
    public JMenu menu() {
	return editMenu;
    }

    @Override
    public JPanel view() {
	return this;
    }

    @Override
    public void addContact(Contact c) {
	listModel.update();
	if (listModel.getSize() == 1) {
	    detail.removeAll();
	    detail.add(container);
	}
	listOutlet.setSelectedValue(c, true);
	updateDetail(c);
    }

    @Override
    public void editContact(Contact o, Contact n) {
	listModel.update();
	listModel.edit(n, o);
	listOutlet.setSelectedValue(n, true);
	updateDetail(n);
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.contacts.controllers;

import gui.contacts.datasource.FilterPanelDataSource;
import gui.contacts.delegates.FilterPanelDelegate;
import java.awt.BorderLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JTextField;

/**
 *
 * @author Warkst
 */
public class FilterPanel extends javax.swing.JPanel {

    private final FilterPanelDelegate delegate;
    private final FilterPanelDataSource datasource;
	    
    private JTextField matchesText;
    private JComboBox typeValues;
    
    /**
     * Creates new form FilterPanel
     */
    public FilterPanel(FilterPanelDelegate delegate, FilterPanelDataSource datasource) {
	initComponents();
	
	this.delegate = delegate;
	this.datasource = datasource;
	
	typeOutlet.setModel(new DefaultComboBoxModel(datasource.unusedFilterKeys().toArray()));
	
	typeOutlet.setSelectedIndex(0);
	typeOutletActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeOutlet = new javax.swing.JComboBox();
        equivalenceOutlet = new javax.swing.JLabel();
        matchesOutlet = new javax.swing.JPanel();
        deleteFilter = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 3));

        typeOutlet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        typeOutlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeOutletActionPerformed(evt);
            }
        });
        add(typeOutlet);

        equivalenceOutlet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        equivalenceOutlet.setText("<equivalenceOutlet>");
        add(equivalenceOutlet);

        matchesOutlet.setLayout(new java.awt.BorderLayout());

        deleteFilter.setText("-");
        deleteFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteFilterActionPerformed(evt);
            }
        });
        matchesOutlet.add(deleteFilter, java.awt.BorderLayout.EAST);

        add(matchesOutlet);
    }// </editor-fold>//GEN-END:initComponents

    private void typeOutletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeOutletActionPerformed
        if (((String)typeOutlet.getSelectedItem()).equalsIgnoreCase("type")) {
	    equivalenceOutlet.setText("is");
	    matchesOutlet.removeAll();
	    
	    typeValues = new JComboBox(new String[]{"Klant", "Leverancier"});
	    
	    matchesOutlet.add(typeValues, BorderLayout.CENTER);
	    matchesOutlet.add(deleteFilter, BorderLayout.EAST);
	} else {
	    equivalenceOutlet.setText("bevat");
	    matchesText = new JTextField();
	    matchesOutlet.removeAll();
	    matchesOutlet.add(matchesText, BorderLayout.CENTER);
	    matchesOutlet.add(deleteFilter, BorderLayout.EAST);
	}
    }//GEN-LAST:event_typeOutletActionPerformed

    private void deleteFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteFilterActionPerformed
        delegate.deleteFilter(this);
    }//GEN-LAST:event_deleteFilterActionPerformed

    public String filterKey(){
	return typeOutlet.getSelectedItem() == null ? null : (String)typeOutlet.getSelectedItem();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteFilter;
    private javax.swing.JLabel equivalenceOutlet;
    private javax.swing.JPanel matchesOutlet;
    private javax.swing.JComboBox typeOutlet;
    // End of variables declaration//GEN-END:variables
}
